"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/tweet-proxy";
exports.ids = ["pages/api/tweet-proxy"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node-fetch");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftweet-proxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftweet-proxy.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftweet-proxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftweet-proxy.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_tweet_proxy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/tweet-proxy.js */ \"(api)/./pages/api/tweet-proxy.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_tweet_proxy_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_tweet_proxy_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/tweet-proxy\",\n        pathname: \"/api/tweet-proxy\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_tweet_proxy_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnR3ZWV0LXByb3h5JnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZ0d2VldC1wcm94eS5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUN1RDtBQUN2RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsc0RBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHNEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL3R3ZWV0LXByb3h5LmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90d2VldC1wcm94eVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3R3ZWV0LXByb3h5XCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftweet-proxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftweet-proxy.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/tweet-proxy.js":
/*!**********************************!*\
  !*** ./pages/api/tweet-proxy.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-fetch */ \"node-fetch\");\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_fetch__WEBPACK_IMPORTED_MODULE_0__);\n\nconst cleanContent = (html)=>{\n    // Replace <br> tags with newline characters before removing HTML\n    let text = html.replace(/<br\\s*\\/?>/gi, '\\n');\n    // Remove all HTML tags but keep their content\n    text = text.replace(/<[^>]+>/g, '');\n    // Decode HTML entities\n    text = text.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&').replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\");\n    // Remove URLs\n    text = text.replace(/https?:\\/\\/\\S+/g, '');\n    // Remove t.co links\n    text = text.replace(/\\bt\\.co\\/\\S+\\b/g, '');\n    // Remove Twitter media links\n    text = text.replace(/pic\\.twitter\\.com\\/\\S+/g, '');\n    // Remove quoted tweet indicators\n    text = text.replace(/^RT @[^:]+: /g, ''); // Remove retweet prefix\n    text = text.replace(/twitter\\.com\\/\\S+/g, ''); // Remove Twitter URLs\n    // Remove any Twitter-specific footer numbers (like 17.1.1925)\n    text = text.replace(/\\d{1,2}\\.\\d{1,2}\\.\\d{4}$/, '');\n    // Clean up whitespace\n    text = text.replace(/\\s*\\n\\s*/g, '\\n') // Clean up space around newlines\n    .replace(/[^\\S\\n]+/g, ' ') // Replace multiple spaces with single space (except newlines)\n    .trim(); // Trim start and end\n    // Remove empty lines and excessive spacing\n    text = text.replace(/\\n{3,}/g, '\\n\\n'); // Replace 3+ newlines with 2\n    return text;\n};\n// Extract author info and content from HTML\nconst extractAuthorInfo = (html)=>{\n    // The author name and handle are in a blockquote element\n    const blockquoteMatch = html.match(/<blockquote[^>]*>(.*?)<\\/blockquote>/s);\n    if (!blockquoteMatch) return {\n        name: 'Unknown',\n        handle: ''\n    };\n    const blockquote = blockquoteMatch[1];\n    // Extract author name - it's in the first <a> tag\n    const nameMatch = blockquote.match(/<a[^>]*>([^<]+)<\\/a>/);\n    const name = nameMatch ? nameMatch[1].trim() : 'Unknown';\n    // Extract handle - it's in the author URL\n    const handleMatch = html.match(/twitter\\.com\\/([^/\"]+)/);\n    const handle = handleMatch ? handleMatch[1] : '';\n    return {\n        name,\n        handle\n    };\n};\nasync function handler(req, res) {\n    const { tweetId } = req.query;\n    if (!tweetId) {\n        return res.status(400).json({\n            error: 'Tweet ID is required'\n        });\n    }\n    try {\n        // First try with x.com\n        const tweetUrl = `https://publish.twitter.com/oembed?url=https://twitter.com/x/status/${tweetId}&omit_script=true`;\n        console.log('Fetching tweet from:', tweetUrl);\n        const response = await node_fetch__WEBPACK_IMPORTED_MODULE_0___default()(tweetUrl);\n        const responseText = await response.text();\n        if (!response.ok) {\n            // Try with twitter.com if x.com fails\n            const altTweetUrl = `https://publish.twitter.com/oembed?url=https://twitter.com/twitter/status/${tweetId}&omit_script=true`;\n            console.log('Retrying with alternative URL:', altTweetUrl);\n            const altResponse = await node_fetch__WEBPACK_IMPORTED_MODULE_0___default()(altTweetUrl);\n            const altResponseText = await altResponse.text();\n            if (!altResponse.ok) {\n                return res.status(404).json({\n                    error: 'Tweet not found',\n                    details: 'The tweet may have been deleted or is not publicly accessible'\n                });\n            }\n            const altData = JSON.parse(altResponseText);\n            const handle = altData.author_url ? altData.author_url.split('/').pop() : '';\n            const contentMatch = altData.html.match(/<p[^>]*>(.*?)<\\/p>/s);\n            const structured = {\n                author: {\n                    name: altData.author_name || 'Unknown',\n                    handle: handle,\n                    avatar: `https://unavatar.io/twitter/${handle}`\n                },\n                content: contentMatch ? cleanContent(contentMatch[1]) : '',\n                date: altData.cache_age ? new Date(Date.now() - altData.cache_age * 1000).toISOString() : null\n            };\n            res.setHeader('Cache-Control', 's-maxage=3600');\n            return res.status(200).json(structured);\n        }\n        const data = JSON.parse(responseText);\n        const handle = data.author_url ? data.author_url.split('/').pop() : '';\n        const contentMatch = data.html.match(/<p[^>]*>(.*?)<\\/p>/s);\n        // Extract date from tweet ID\n        const tweetDate = new Date(Number(BigInt(tweetId) >> 22n) + 1288834974657);\n        const structured = {\n            author: {\n                name: data.author_name || 'Unknown',\n                handle: handle,\n                avatar: `https://unavatar.io/twitter/${handle}`\n            },\n            content: contentMatch ? cleanContent(contentMatch[1]) : '',\n            date: tweetDate.toISOString()\n        };\n        res.setHeader('Cache-Control', 's-maxage=3600');\n        res.status(200).json(structured);\n    } catch (error) {\n        console.error('Error in tweet-proxy:', error);\n        res.status(500).json({\n            error: 'Failed to fetch tweet',\n            details: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/tweet-proxy.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftweet-proxy&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Ftweet-proxy.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();