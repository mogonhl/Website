"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/screenshot";
exports.ids = ["pages/api/screenshot"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("puppeteer");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscreenshot&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscreenshot.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscreenshot&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscreenshot.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_screenshot_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/screenshot.js */ \"(api)/./pages/api/screenshot.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_screenshot_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_screenshot_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_screenshot_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_screenshot_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/screenshot\",\n        pathname: \"/api/screenshot\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_screenshot_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNjcmVlbnNob3QmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnNjcmVlbnNob3QuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDc0Q7QUFDdEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHFEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxxREFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9zY3JlZW5zaG90LmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsICdkZWZhdWx0Jyk7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCAnY29uZmlnJyk7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zY3JlZW5zaG90XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvc2NyZWVuc2hvdFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscreenshot&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscreenshot.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/screenshot.js":
/*!*********************************!*\
  !*** ./pages/api/screenshot.js ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([puppeteer__WEBPACK_IMPORTED_MODULE_0__]);\npuppeteer__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Sticker configuration\nconst STICKERS = [\n    '/assets/Sticker/1.png',\n    '/assets/Sticker/2.png',\n    '/assets/Sticker/2 2.png',\n    '/assets/Sticker/3.png',\n    '/assets/Sticker/3 2.png',\n    '/assets/Sticker/4.png',\n    '/assets/Sticker/4 2.png',\n    '/assets/Sticker/5.png',\n    '/assets/Sticker/6.png',\n    '/assets/Sticker/7.png',\n    '/assets/Sticker/9.png',\n    '/assets/Sticker/10.png',\n    '/assets/Sticker/13.png',\n    '/assets/Sticker/14.png',\n    '/assets/Sticker/15.png',\n    '/assets/Sticker/16.png',\n    '/assets/Sticker/17.png'\n];\nconst STICKER_CONFIG = {\n    size: {\n        min: 94,\n        max: 125\n    },\n    minRotation: -45,\n    maxRotation: 45,\n    total: 24\n};\n// Browser pool configuration\nlet browserWSEndpoint = null;\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 1000;\nconst wait = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nconst initBrowser = async ()=>{\n    try {\n        const browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch({\n            headless: 'new',\n            args: [\n                '--no-sandbox',\n                '--disable-setuid-sandbox',\n                '--disable-dev-shm-usage',\n                '--disable-accelerated-2d-canvas',\n                '--disable-gpu',\n                '--js-flags=--max-old-space-size=512',\n                '--disable-web-security',\n                '--no-zygote',\n                '--single-process',\n                '--disable-features=site-per-process',\n                '--disable-features=TranslateUI',\n                '--disable-extensions',\n                '--disable-component-extensions-with-background-pages',\n                '--disable-background-networking',\n                '--disable-background-timer-throttling',\n                '--disable-backgrounding-occluded-windows',\n                '--disable-breakpad',\n                '--disable-client-side-phishing-detection',\n                '--disable-default-apps',\n                '--disable-sync',\n                '--metrics-recording-only',\n                '--no-default-browser-check',\n                '--no-experiments',\n                '--mute-audio'\n            ],\n            ignoreHTTPSErrors: true,\n            timeout: 30000\n        });\n        // Check if browser is connected\n        if (!browser.isConnected()) {\n            throw new Error('Browser disconnected after launch');\n        }\n        return browser;\n    } catch (error) {\n        console.error('Failed to initialize browser:', error);\n        throw error;\n    }\n};\nconst getBrowser = async ()=>{\n    if (!browserWSEndpoint) {\n        const browser = await initBrowser();\n        return browser;\n    }\n    try {\n        return await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].connect({\n            browserWSEndpoint,\n            timeout: 15000\n        });\n    } catch (error) {\n        console.error('Failed to connect to browser, reinitializing:', error);\n        const browser = await initBrowser();\n        return browser;\n    }\n};\nconst withBrowser = async (fn)=>{\n    let browser;\n    try {\n        browser = await initBrowser();\n        if (!browser.isConnected()) {\n            throw new Error('Browser not connected');\n        }\n        return await fn(browser);\n    } catch (error) {\n        console.error('Browser operation failed:', error);\n        throw error;\n    } finally{\n        if (browser) {\n            try {\n                if (browser.isConnected()) {\n                    await browser.close();\n                }\n            } catch (error) {\n                console.error('Failed to close browser:', error);\n            }\n        }\n    }\n};\nconst withPage = async (browser, fn)=>{\n    let page;\n    try {\n        if (!browser.isConnected()) {\n            throw new Error('Browser not connected when creating page');\n        }\n        page = await browser.newPage();\n        if (!page) {\n            throw new Error('Failed to create new page');\n        }\n        // Configure page settings\n        await Promise.all([\n            page.setDefaultNavigationTimeout(30000),\n            page.setDefaultTimeout(30000),\n            page.setViewport({\n                width: 800,\n                height: 600,\n                deviceScaleFactor: 1\n            }),\n            page.setRequestInterception(true)\n        ]);\n        // Only allow necessary resources\n        page.on('request', (request)=>{\n            const resourceType = request.resourceType();\n            if (resourceType === 'image' || resourceType === 'stylesheet' || resourceType === 'document') {\n                request.continue();\n            } else {\n                request.abort();\n            }\n        });\n        return await fn(page);\n    } catch (error) {\n        console.error('Page operation failed:', error);\n        throw error;\n    } finally{\n        if (page) {\n            try {\n                if (!page.isClosed()) {\n                    await page.close();\n                }\n            } catch (error) {\n                console.error('Failed to close page:', error);\n            }\n        }\n    }\n};\n// Helper functions for sticker generation\nconst getRandomSticker = ()=>STICKERS[Math.floor(Math.random() * STICKERS.length)];\nconst getRandomSize = ()=>STICKER_CONFIG.size.min + Math.floor(Math.random() * (STICKER_CONFIG.size.max - STICKER_CONFIG.size.min));\nconst getRandomRotation = ()=>STICKER_CONFIG.minRotation + Math.floor(Math.random() * (STICKER_CONFIG.maxRotation - STICKER_CONFIG.minRotation));\n// Generate sticker positions around the edges\nconst generateStickers = ()=>{\n    const stickers = [];\n    const stickersPerSide = Math.floor(STICKER_CONFIG.total / 4);\n    for(let i = 0; i < STICKER_CONFIG.total; i++){\n        const sideIndex = Math.floor(i / stickersPerSide);\n        const positionInSide = i % stickersPerSide;\n        let x, y;\n        switch(sideIndex){\n            case 0:\n                x = 5 + 90 * positionInSide / (stickersPerSide - 1);\n                y = 2 + positionInSide % 2 * 8;\n                break;\n            case 1:\n                x = 98 - positionInSide % 2 * 8;\n                y = 15 + 70 * positionInSide / (stickersPerSide - 1);\n                break;\n            case 2:\n                x = 95 - 90 * positionInSide / (stickersPerSide - 1);\n                y = 98 - positionInSide % 2 * 8;\n                break;\n            case 3:\n                x = 2 + positionInSide % 2 * 8;\n                y = 85 - 70 * positionInSide / (stickersPerSide - 1);\n                break;\n            default:\n                const corner = i % 4;\n                x = corner % 2 ? 98 : 2;\n                y = corner < 2 ? 2 : 98;\n        }\n        // Add slight randomness\n        x += (Math.random() - 0.5) * 1;\n        y += (Math.random() - 0.5) * 1;\n        stickers.push({\n            src: getRandomSticker(),\n            size: getRandomSize(),\n            rotation: getRandomRotation(),\n            x,\n            y\n        });\n    }\n    return stickers;\n};\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed. Please use POST.'\n        });\n    }\n    const { html, styles, images } = req.body;\n    if (!html) {\n        return res.status(400).json({\n            error: 'No HTML content provided'\n        });\n    }\n    try {\n        const baseUrl = `${req.headers['x-forwarded-proto'] || 'http'}://${req.headers.host}`;\n        const stickers = generateStickers();\n        const stickersHtml = stickers.map((sticker)=>`\n            <img \n                src=\"${new URL(sticker.src, baseUrl).href}\" \n                class=\"sticker\" \n                style=\"\n                    width: ${sticker.size}px;\n                    height: ${sticker.size}px;\n                    left: ${sticker.x}%;\n                    top: ${sticker.y}%;\n                    --rotation: ${sticker.rotation}deg;\n                \"\n            />\n        `).join('');\n        const screenshot = await withBrowser(async (browser)=>{\n            // Clean HTML first\n            const cleanHtml = await withPage(browser, async (page)=>{\n                await page.setContent(html, {\n                    waitUntil: [\n                        'domcontentloaded',\n                        'networkidle0'\n                    ],\n                    timeout: 30000\n                });\n                return page.evaluate(()=>{\n                    const stickerContainers = document.querySelectorAll('.absolute.inset-0.rounded-lg.overflow-hidden');\n                    stickerContainers.forEach((container)=>container.remove());\n                    const stickers = document.querySelectorAll('img.sticker');\n                    stickers.forEach((sticker)=>sticker.remove());\n                    const tweetContent = document.querySelector('.relative.mx-auto.w-full.max-w-xl.z-10');\n                    return tweetContent ? tweetContent.outerHTML : document.body.innerHTML;\n                });\n            });\n            // Take screenshot\n            return await withPage(browser, async (page)=>{\n                const content = `\n                    <!DOCTYPE html>\n                    <html>\n                    <head>\n                        <style>\n                            ${styles || ''}\n                            body {\n                                margin: 0;\n                                padding: 20px;\n                                background: #0a0a0a;\n                                color: #ffffff;\n                                font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n                            }\n                            #tweet-list-container {\n                                background: #0a0a0a;\n                                border-radius: 8px;\n                                padding: 20px;\n                                max-width: 800px;\n                                margin: 0 auto;\n                                position: relative;\n                                min-height: 300px;\n                            }\n                            .green-background {\n                                position: absolute;\n                                top: 0;\n                                left: 0;\n                                width: 100%;\n                                height: 100%;\n                                background-image: url('${new URL('/assets/green.webp', baseUrl).href}');\n                                background-size: cover;\n                                background-position: center;\n                                opacity: 0.1;\n                                border-radius: 8px;\n                                pointer-events: none;\n                                z-index: 1;\n                            }\n                            .sticker {\n                                position: absolute;\n                                transition: all 0.5s ease;\n                                animation: float 3s ease-in-out infinite;\n                                opacity: 0.95;\n                                z-index: 3;\n                                transform: translate(-50%, -50%) rotate(var(--rotation));\n                                pointer-events: none;\n                            }\n                            .tweet-content {\n                                background: #1a2a30;\n                                border-radius: 8px;\n                                padding: 15px;\n                                position: relative;\n                                z-index: 2;\n                            }\n                        </style>\n                    </head>\n                    <body>\n                        <div id=\"tweet-list-container\">\n                            <div class=\"green-background\"></div>\n                            <div class=\"tweet-content\">\n                                ${cleanHtml}\n                            </div>\n                            ${stickersHtml}\n                        </div>\n                    </body>\n                    </html>\n                `;\n                await page.setContent(content, {\n                    waitUntil: [\n                        'domcontentloaded',\n                        'networkidle0'\n                    ],\n                    timeout: 30000\n                });\n                // Wait for images to load\n                await page.evaluate(()=>{\n                    return Promise.all(Array.from(document.images).filter((img)=>!img.complete).map((img)=>new Promise((resolve)=>{\n                            img.onload = img.onerror = resolve;\n                        })));\n                });\n                const element = await page.$('#tweet-list-container');\n                if (!element) throw new Error('Tweet container not found');\n                const boundingBox = await element.boundingBox();\n                if (!boundingBox) throw new Error('Could not get tweet container dimensions');\n                return element.screenshot({\n                    type: 'png',\n                    encoding: 'binary',\n                    clip: {\n                        x: boundingBox.x,\n                        y: boundingBox.y,\n                        width: boundingBox.width,\n                        height: boundingBox.height\n                    },\n                    omitBackground: true\n                });\n            });\n        });\n        res.setHeader('Content-Type', 'image/png');\n        res.setHeader('Content-Length', screenshot.length);\n        res.end(screenshot, 'binary');\n    } catch (error) {\n        console.error('Screenshot error:', error);\n        res.status(500).json({\n            error: error.message,\n            stack:  true ? error.stack : 0\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/screenshot.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fscreenshot&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fscreenshot.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();